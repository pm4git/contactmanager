{"version":3,"sources":["Components/layout/Header.js","Components/contacts/Contact.js","actions/contactActions.js","actions/types.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/pages/About.js","Components/pages/NotFound.js","Components/contacts/EditContact.js","reducers/contactReducer.js","reducers/RootReducer.js","Components/store/store.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Contact","state","showContactInfo","contact","this","id","name","email","phone","handleDeleteClick","a","deleteContact","onClick","setState","style","cursor","bind","float","color","marginRight","Component","connect","dispatch","Axios","delete","type","payload","console","error","Contacts","getContacts","contacts","Fragment","map","key","get","resp","data","TextInputGroup","label","placeHolder","value","onChange","htmlFor","classnames","placeholder","AddContact","errors","e","target","onSubmit","preventDefault","newContact","addContact","clearState","history","push","post","About","NotFound","EditContact","updateContact","match","params","getContact","general","undefined","put","initialState","combineReducers","action","filter","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","App","basename","process","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qMAIMA,EAAS,SAACC,GAAW,IAChBC,EAAYD,EAAZC,SACP,OACI,yBAAKC,UAAU,2DACX,yBAAKA,UAAU,aACX,uBAAGC,KAAK,IAAID,UAAU,gBACjBD,GAEL,6BACI,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,YAAW,uBAAGA,UAAU,gBAA/C,SAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAG,eAAeF,UAAU,YAAW,uBAAGA,UAAU,gBAA1D,gBAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAG,SAASF,UAAU,YAAW,uBAAGA,UAAU,oBAApD,eAQ5BH,EAAOM,aAAe,CAClBJ,SAAU,UAKCF,Q,+FC9BTO,E,2MACFC,MAAQ,CAACC,iBAAiB,G,wEAEhB,IAAD,OACAC,EAAWC,KAAKV,MAAhBS,QACEE,EAA0BF,EAA1BE,GAAIC,EAAsBH,EAAtBG,KAAMC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,MAGlBC,EAAiB,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,sDACtB,EAAKhB,MAAMiB,cAAcN,GADH,2CAAH,sDAIvB,OACI,yBAAKT,UAAU,uBACX,4BAAKU,EAAM,IACP,uBAAGM,QATa,kBAAM,EAAKC,SAAS,CAACX,iBAAkB,EAAKD,MAAMC,mBASjCN,UAAU,mBACxCkB,MAAO,CAACC,OAAQ,aACnB,uBAAGH,QAASH,EAAkBO,KAAKZ,KAAMC,GAAKT,UAAU,eACrDkB,MAAO,CAACC,OAAQ,UAAWE,MAAO,WACrC,kBAAC,IAAD,CAAMnB,GAAE,wBAAmBO,IACvB,uBACIT,UAAU,oBACVkB,MAAO,CACHC,OAAQ,UACRE,MAAO,QACPC,MAAO,QACPC,YAAa,YAK5Bf,KAAKH,MAAMC,gBACR,wBAAIN,UAAU,cACV,wBAAIA,UAAU,mBAAmBW,GACjC,wBAAIX,UAAU,mBAAmBY,IAC5B,U,GAnCPY,aA8CPC,cAAQ,KAAM,CAACV,cC9BD,SAACN,GAAD,8CAAQ,WAAMiB,GAAN,SAAAZ,EAAA,+EAEvBa,IAAMC,OAAN,qDAA2DnB,IAFpC,OAG7BiB,EAAS,CACLG,KCxBkB,iBDyBlBC,QAASrB,IALgB,+CAQ7BsB,QAAQC,MAAR,MAR6B,wDAAR,wDD8BdP,CAA+BrB,GG9CxC6B,E,4LAGEzB,KAAKV,MAAMoC,gB,+BAGL,IACCC,EAAY3B,KAAKV,MAAjBqC,SACP,OACI,kBAAC,IAAMC,SAAP,KACI,wBAAIpC,UAAU,kBAAiB,0BAAMA,UAAU,eAAhB,WAA/B,SACCmC,EAASE,KAAI,SAAA9B,GAAO,OAAI,kBAAC,EAAD,CAAS+B,IAAK/B,EAAQE,GAAIF,QAASA,Y,GAXrDiB,aA4BRC,eAJS,SAACpB,GAAD,MACpB,CAAC8B,SAAU9B,EAAME,QAAQ4B,YAGW,CAACD,YF/Bd,yDAAM,WAAMR,GAAN,eAAAZ,EAAA,sEAEVa,IAAMY,IAAI,8CAFA,OAEvBC,EAFuB,OAG7Bd,EAAS,CACLG,KCPoB,eDQpBC,QAASU,EAAKC,OALW,2CAAN,wDE+BZhB,CAAwCQ,G,yBC9BjDS,EAAiB,SAAC5C,GAAW,IACxB6C,EAA0D7C,EAA1D6C,MAAOd,EAAmD/B,EAAnD+B,KAAMnB,EAA6CZ,EAA7CY,KAAMkC,EAAuC9C,EAAvC8C,YAAaC,EAA0B/C,EAA1B+C,MAAOC,EAAmBhD,EAAnBgD,SAAUd,EAASlC,EAATkC,MACxD,OACI,yBAAKhC,UAAU,cACX,2BAAO+C,QAASrC,GAAOiC,GACvB,2BAAOd,KAAMA,EAAMnB,KAAMA,EAAMV,UAAWgD,IAAW,eAAgB,CAAC,aAAchB,IAC7EiB,YAAaL,EAAaC,MAAOA,EAAOC,SAAUA,IACxDd,GAAS,yBAAKhC,UAAU,oBAAoBgC,KAezDU,EAAevC,aAAe,CAC1B0B,KAAM,QAGKa,QCxBTQ,E,2MACF7C,MAAQ,CACJK,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuC,OAAQ,I,EAGZL,SAAW,SAACM,GACR,EAAKnC,SAAL,eAAgBmC,EAAEC,OAAO3C,KAAO0C,EAAEC,OAAOR,S,EAG7CS,S,uCAAW,WAAOF,GAAP,uBAAAtC,EAAA,yDAEPsC,EAAEG,iBAFK,EAGsB,EAAKlD,MAA3BK,EAHA,EAGAA,KAAMC,EAHN,EAGMA,MAAOC,EAHb,EAGaA,MAEP,KAATF,EALG,uBAMH,EAAKO,SAAS,CAACkC,OAAQ,CAACzC,KAAM,sBAN3B,6BASO,KAAVC,EATG,uBAUH,EAAKM,SAAS,CAACkC,OAAQ,CAACxC,MAAO,uBAV5B,6BAaO,KAAVC,EAbG,wBAcH,EAAKK,SACD,CAACkC,OAAQ,CAACvC,MAAO,uBAflB,2BAkBD4C,EAAa,CACf9C,OACAC,QACAC,SAEJ,EAAKd,MAAM2D,WAAWD,GACtB,EAAKE,aACL,EAAK5D,MAAM6D,QAAQC,KAAK,KAzBjB,4C,kIA6BPpD,KAAKS,SAAS,CAACP,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIuC,OAAQ,O,+BAGjD,IAAD,EACgC3C,KAAKH,MAAnCK,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOuC,EADtB,EACsBA,OAC3B,OACI,yBAAKnD,UAAU,aACX,yBAAKA,UAAU,eAAf,eAGA,yBAAKA,UAAU,aACX,0BAAMsD,SAAU9C,KAAK8C,SAASlC,KAAKZ,OAC/B,kBAAC,EAAD,CAAgBmC,MAAM,OAAOjC,KAAK,OAAOmC,MAAOnC,EAChCkC,YAAY,gBAAgBE,SAAUtC,KAAKsC,SAC3Cd,MAAOmB,EAAOzC,OAC9B,kBAAC,EAAD,CAAgBmB,KAAK,QAAQc,MAAM,QAAQjC,KAAK,QAAQmC,MAAOlC,EAC/CiC,YAAY,iBAAiBE,SAAUtC,KAAKsC,SAC5Cd,MAAOmB,EAAOxC,QAC9B,kBAAC,EAAD,CAAgBkB,KAAK,QAAQc,MAAM,QAAQjC,KAAK,QAAQmC,MAAOjC,EAC/CgC,YAAY,iBAAiBE,SAAUtC,KAAKsC,SAC5Cd,MAAOmB,EAAOvC,QAC9B,2BAAOiB,KAAK,SAASgB,MAAM,cACpB7C,UAAU,0C,GA/DhBwB,aA2EVC,cAAQ,KAAM,CAACgC,WJvCJ,SAAClD,GAAD,8CAAa,WAAMmB,GAAN,eAAAZ,EAAA,sEAChBa,IAAMkC,KAAK,6CAA8CtD,GADzC,OAC7BiC,EAD6B,OAEnCd,EAAS,CACLG,KCzCmB,cD0CnBC,QAASU,EAAKC,OAJiB,2CAAb,wDIuCXhB,CAA4ByB,G,QCrE5BY,EAVD,WACV,OACI,6BACI,wBAAI9D,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,gDACA,uBAAGA,UAAU,kBAAb,mBCMG+D,EAVE,WACb,OACI,6BACI,wBAAI/D,UAAU,aAAd,kBACA,uBAAGA,UAAU,QAAb,oCACA,uBAAGA,UAAU,QAAO,kBAAC,IAAD,CAAME,GAAG,KAAT,WAApB,oBCDN8D,E,2MACF3D,MAAQ,CACJI,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuC,OAAQ,I,EA0BZL,SAAW,SAACM,GACR,EAAKnC,SAAL,eAAgBmC,EAAEC,OAAO3C,KAAO0C,EAAEC,OAAOR,S,EAG7CS,S,uCAAW,WAAOF,GAAP,uBAAAtC,EAAA,yDAEPsC,EAAEG,iBAFK,EAG0B,EAAKlD,MAA/BI,EAHA,EAGAA,GAAIC,EAHJ,EAGIA,KAAMC,EAHV,EAGUA,MAAOC,EAHjB,EAGiBA,MAEX,KAATF,EALG,uBAMH,EAAKO,SAAS,CAACkC,OAAQ,CAACzC,KAAM,sBAN3B,6BASO,KAAVC,EATG,uBAUH,EAAKM,SAAS,CAACkC,OAAQ,CAACxC,MAAO,uBAV5B,6BAaO,KAAVC,EAbG,wBAcH,EAAKK,SACD,CAACkC,OAAQ,CAACvC,MAAO,uBAflB,2BAmBP,EAAKd,MAAMmE,cAAc,CAACxD,KAAIC,OAAMC,QAAOC,UAE3C,EAAK8C,aACL,EAAK5D,MAAM6D,QAAQC,KAAK,KAtBjB,4C,yPATHnD,EAAKD,KAAKV,MAAMoE,MAAMC,OAAO1D,GACjCD,KAAKV,MAAMsE,WAAW3D,G,yIAkCtBD,KAAKS,SAAS,CAACP,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIuC,OAAQ,O,+BAKvD,IAAM5C,EAAUC,KAAKH,MACdK,EAA8BH,EAA9BG,KAAMC,EAAwBJ,EAAxBI,MAAOC,EAAiBL,EAAjBK,MAAOuC,EAAU5C,EAAV4C,OAC3B,OACI,yBAAKnD,UAAU,aACX,yBAAKA,UAAU,eAAf,gBAGA,yBAAKA,UAAU,aACX,0BAAMsD,SAAU9C,KAAK8C,SAASlC,KAAKZ,OAC/B,kBAAC,EAAD,CAAgBmC,MAAM,OAAOjC,KAAK,OAAOmC,MAAOnC,EAChCkC,YAAY,gBAAgBE,SAAUtC,KAAKsC,SAC3Cd,MAAOmB,EAAOzC,OAC9B,kBAAC,EAAD,CAAgBmB,KAAK,QAAQc,MAAM,QAAQjC,KAAK,QAAQmC,MAAOlC,EAC/CiC,YAAY,iBAAiBE,SAAUtC,KAAKsC,SAC5Cd,MAAOmB,EAAOxC,QAC9B,kBAAC,EAAD,CAAgBkB,KAAK,QAAQc,MAAM,QAAQjC,KAAK,QAAQmC,MAAOjC,EAC/CgC,YAAY,iBAAiBE,SAAUtC,KAAKsC,SAC5Cd,MAAOmB,EAAOvC,QAC9B,2BAAOiB,KAAK,SAASgB,MAAM,iBACpB7C,UAAU,qCAGxBmD,EAAOkB,SAAW,yBAAKrE,UAAU,2BAA2BmD,EAAOkB,a,gDA/EhDvE,EAAOO,GACnC,GAAiB,KAAbA,EAAMI,GAAW,CAAC,IAAD,EACgBX,EAAMS,QAAhCE,EADU,EACVA,GAAIC,EADM,EACNA,KAAMC,EADA,EACAA,MAAOC,EADP,EACOA,MACxB,OAAW,OAAPH,QAAsB6D,IAAP7D,EACR,CAEHA,KAAIC,OAAMC,QAAOC,SAId,KAEX,OAAO,S,GAtBOY,aA2GXC,eANS,SAACpB,GAAD,MACpB,CACIE,QAASF,EAAME,QAAQA,WAIS,CAAC0D,cPhFZ,SAAC1D,GAAD,8CAAa,WAAMmB,GAAN,eAAAZ,EAAA,sEACnBa,IAAM4C,IAAN,qDAAwDhE,EAAQE,IAAMF,GADnD,OAChCiC,EADgC,OAEtCd,EAAS,CACLG,KClCsB,iBDmCtBC,QAASU,EAAKC,OAJoB,2CAAb,uDOgF2B2B,WPrG9B,SAAC3D,GAAD,8CAAQ,WAAMiB,GAAN,eAAAZ,EAAA,sEAEXa,IAAMY,IAAN,qDAAwD9B,IAF7C,OAExB+B,EAFwB,OAG9Bd,EAAS,CACLG,KChBmB,cDiBnBC,QAASU,EAAKC,OALY,2CAAR,wDOqGXhB,CAAsDuC,G,ilBChHrE,IAAMQ,EAAe,CACjBrC,SAAU,GACV5B,QAAS,ICDEkE,cACX,CACIlE,QDEO,WAAyC,IAA/BF,EAA8B,uDAAtBmE,EAAcE,EAAQ,uCACnD,OAAQA,EAAO7C,MACX,IPToB,eOUhB,OAAO,EAAP,GACOxB,EADP,CAEI8B,SAAUuC,EAAO5C,UAEzB,IPbmB,cOcf,OAAO,EAAP,GACOzB,EADP,CAEIE,QAASmE,EAAO5C,UAExB,IPfmB,cOgBf,OAAO,EAAP,GACOzB,EADP,CAEI8B,SAAS,CAAEuC,EAAO5C,SAAV,mBAAsBzB,EAAM8B,aAG5C,IPvBsB,iBOwBlB,OAAO,EAAP,GACO9B,EADP,CAEI8B,SAAU9B,EAAM8B,SAASwC,QAAO,SAACpE,GAAD,OAAaA,EAAQE,KAAOiE,EAAO5C,aAG3E,IP5BsB,iBO6BlB,OAAO,EAAP,GACOzB,EADP,CAEI8B,SAAU9B,EAAM8B,SAASE,KAAI,SAAC9B,GAAD,OAAaA,EAAQE,KAAOiE,EAAO5C,QAAQrB,GAAKiE,EAAO5C,QAAUvB,OAGtG,QACI,OAAOF,MEhCbuE,EAAa,CAACC,KAEdC,EAAmBC,OAAOC,sCAAwCC,IAKzDC,EAJDC,YAAYC,EALL,GAKgCN,EACjDO,IAAe,WAAf,EAAmBT,KCwBRU,MAtBf,WAEI,OACI,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,IAAD,CAAQK,SAAUC,mBACd,yBAAKxF,UAAU,OACX,kBAAC,EAAD,CAAQD,SAAS,oBACjB,yBAAKC,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,IAAIC,UAAW1D,IACjC,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,eAAeC,UAAWzC,IAC5C,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,oBAAoBC,UAAW3B,IACjD,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,SAASC,UAAW7B,IACtC,kBAAC,IAAD,CAAO6B,UAAW5B,UCb1B6B,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAAS5B,MACvB,2D,MCXN6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f2856b73.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"/>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"/>Add\r\n                                contact</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"/>About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteContact} from \"../../actions/contactActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Contact extends Component {\r\n    state = {showContactInfo: false};\r\n\r\n    render() {\r\n        let {contact} = this.props;\r\n        const {id, name, email, phone} = contact;\r\n        const handleShowInfoClick = () => this.setState({showContactInfo: !this.state.showContactInfo});\r\n\r\n        const handleDeleteClick = async (id) => {\r\n            this.props.deleteContact(id)\r\n        };\r\n\r\n        return (\r\n            <div className=\"card card-body mb-3\">\r\n                <h4>{name}{' '}\r\n                    <i onClick={handleShowInfoClick} className=\"fas fa-sort-down\"\r\n                       style={{cursor: 'pointer'}}/>\r\n                    <i onClick={handleDeleteClick.bind(this, id)} className=\"fas fa-times\"\r\n                       style={{cursor: 'pointer', float: 'right'}}/>\r\n                    <Link to={`/contact/edit/${id}`}>\r\n                        <i\r\n                            className=\"fas fa-pencil-alt\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                float: 'right',\r\n                                color: 'black',\r\n                                marginRight: '1rem'\r\n                            }}/>\r\n                    </Link>\r\n\r\n                </h4>\r\n                {this.state.showContactInfo ? (\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">{email}</li>\r\n                        <li className=\"list-group-item\">{phone}</li>\r\n                    </ul>) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {deleteContact})(Contact);\r\n","import {ADD_CONTACT, DELETE_CONTACT, GET_CONTACT, GET_CONTACTS, UPDATE_CONTACT} from \"./types\";\r\nimport Axios from \"axios\";\r\n\r\nexport const getContacts = () => async dispatch => {\r\n\r\n    const resp = await Axios.get('https://jsonplaceholder.typicode.com/users');\r\n    dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: resp.data\r\n\r\n    });\r\n};\r\n\r\nexport const getContact = (id) => async dispatch => {\r\n\r\n    const resp = await Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n        type: GET_CONTACT,\r\n        payload: resp.data\r\n    });\r\n};\r\n\r\nexport const deleteContact = (id) => async dispatch => {\r\n    try {\r\n        await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nexport const updateContact = (contact) => async dispatch => {\r\n    const resp = await Axios.put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact);\r\n    dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: resp.data\r\n    });\r\n};\r\n\r\nexport const addContact = (contact) => async dispatch => {\r\n    const resp = await Axios.post(\"https://jsonplaceholder.typicode.com/users\", contact);\r\n    dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: resp.data\r\n    });\r\n};\r\n\r\n","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\n","import React, {Component} from 'react';\r\nimport Contact from \"./Contact\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getContacts} from \"../../actions/contactActions\";\r\n\r\nclass Contacts extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getContacts();\r\n    }\r\n\r\n    render() {\r\n        const {contacts} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> list</h1>\r\n                {contacts.map(contact => <Contact key={contact.id} contact={contact}/>)}\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    };\r\n}\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    getContacts: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => (\r\n    {contacts: state.contact.contacts}\r\n);\r\n\r\nexport default connect(mapStateToProps, {getContacts})(Contacts);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = (props) => {\r\n    const {label, type, name, placeHolder, value, onChange, error} = props;\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} className={classnames('form-control', {'is-invalid': error})}\r\n                   placeholder={placeHolder} value={value} onChange={onChange}/>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeHolder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, {Component} from 'react';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport {addContact} from \"../../actions/contactActions\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: \"\"\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    };\r\n\r\n    onSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        if (name === \"\") {\r\n            this.setState({errors: {name: \"Name is required\"}});\r\n            return;\r\n        }\r\n        if (email === \"\") {\r\n            this.setState({errors: {email: \"Email is required\"}});\r\n            return;\r\n        }\r\n        if (phone === \"\") {\r\n            this.setState(\r\n                {errors: {phone: \"Phone is required\"}});\r\n            return;\r\n        }\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        this.props.addContact(newContact);\r\n        this.clearState();\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    clearState() {\r\n        this.setState({name: \"\", email: \"\", phone: \"\", errors: {}})\r\n    }\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n        return (\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                    Add Contact\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this)}>\r\n                        <TextInputGroup label=\"Name\" name=\"name\" value={name}\r\n                                        placeHolder=\"Enter Name...\" onChange={this.onChange}\r\n                                        error={errors.name}/>\r\n                        <TextInputGroup type=\"email\" label=\"Email\" name=\"email\" value={email}\r\n                                        placeHolder=\"Enter Email...\" onChange={this.onChange}\r\n                                        error={errors.email}/>\r\n                        <TextInputGroup type=\"phone\" label=\"Phone\" name=\"phone\" value={phone}\r\n                                        placeHolder=\"Enter Phone...\" onChange={this.onChange}\r\n                                        error={errors.phone}/>\r\n                        <input type=\"submit\" value=\"Add Contact\"\r\n                               className=\"btn btn-outline-dark btn-block\"/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddContact.propTypes = {\r\n    addContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {addContact})(AddContact);\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple Contact Manager for managing contacts</p>\r\n            <p className=\"text-secondary\">version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist.</p>\r\n            <p className=\"lead\"><Link to=\"/\">Go back</Link> to home page.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, {Component} from 'react';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {getContact, updateContact} from '../../actions/contactActions'\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: \"\"\r\n    };\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.id === \"\") {\r\n            const {id, name, email, phone} = props.contact;\r\n            if (id !== null && id !== undefined)\r\n                return {\r\n\r\n                    id, name, email, phone\r\n\r\n                };\r\n            else\r\n                return null;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let id = this.props.match.params.id;\r\n        this.props.getContact(id);\r\n\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    };\r\n\r\n    onSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        const {id, name, email, phone} = this.state;\r\n\r\n        if (name === \"\") {\r\n            this.setState({errors: {name: \"Name is required\"}});\r\n            return;\r\n        }\r\n        if (email === \"\") {\r\n            this.setState({errors: {email: \"Email is required\"}});\r\n            return;\r\n        }\r\n        if (phone === \"\") {\r\n            this.setState(\r\n                {errors: {phone: \"Phone is required\"}});\r\n            return;\r\n        }\r\n\r\n        this.props.updateContact({id, name, email, phone});\r\n\r\n        this.clearState();\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    clearState() {\r\n        this.setState({name: \"\", email: \"\", phone: \"\", errors: {}})\r\n    }\r\n\r\n    render() {\r\n\r\n        const contact = this.state;\r\n        const {name, email, phone, errors} = contact;\r\n        return (\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                    Edit Contact\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this)}>\r\n                        <TextInputGroup label=\"Name\" name=\"name\" value={name}\r\n                                        placeHolder=\"Enter Name...\" onChange={this.onChange}\r\n                                        error={errors.name}/>\r\n                        <TextInputGroup type=\"email\" label=\"Email\" name=\"email\" value={email}\r\n                                        placeHolder=\"Enter Email...\" onChange={this.onChange}\r\n                                        error={errors.email}/>\r\n                        <TextInputGroup type=\"phone\" label=\"Phone\" name=\"phone\" value={phone}\r\n                                        placeHolder=\"Enter Phone...\" onChange={this.onChange}\r\n                                        error={errors.phone}/>\r\n                        <input type=\"submit\" value=\"Update Contact\"\r\n                               className=\"btn btn-outline-dark btn-block\"/>\r\n                    </form>\r\n                </div>\r\n                {errors.general && <div className=\"alert alert-danger mt-3\">{errors.general}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEditContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    updateContact: PropTypes.func.isRequired,\r\n    getContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        contact: state.contact.contact\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps, {updateContact, getContact})(EditContact);\r\n","import {ADD_CONTACT, DELETE_CONTACT, GET_CONTACT, GET_CONTACTS, UPDATE_CONTACT} from '../actions/types';\r\n\r\nconst initialState = {\r\n    contacts: [],\r\n    contact: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload\r\n            };\r\n        case GET_CONTACT:\r\n            return {\r\n                ...state,\r\n                contact: action.payload\r\n            };\r\n        case ADD_CONTACT: {\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        }\r\n        case DELETE_CONTACT: {\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter((contact) => contact.id !== action.payload)\r\n            };\r\n        }\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map((contact) => contact.id === action.payload.id ? action.payload : contact)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import contactReducer from './contactReducer'\r\nimport {combineReducers} from \"redux\";\r\n\r\nexport default combineReducers(\r\n    {\r\n        contact: contactReducer\r\n    }\r\n)\r\n","import thunk from 'redux-thunk';\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport rootReducer from '../../reducers/RootReducer.js';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, initialState, composeEnhancers(\r\n    applyMiddleware(...middleware)\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Header from \"./Components/layout/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Contacts from \"./Components/contacts/Contacts\";\r\nimport AddContact from \"./Components/contacts/AddContact\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport About from \"./Components/pages/About\";\r\nimport NotFound from \"./Components/pages/NotFound\";\r\nimport EditContact from \"./Components/contacts/EditContact\";\r\nimport store from \"./Components/store/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <div className=\"App\">\r\n                    <Header branding=\"Contact Manager\"/>\r\n                    <div className=\"container\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Contacts}/>\r\n                            <Route exact path=\"/contact/add\" component={AddContact}/>\r\n                            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\r\n                            <Route exact path=\"/about\" component={About}/>\r\n                            <Route component={NotFound}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}